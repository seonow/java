배열
배열이 없다면 제일 고통받을 일 중 하나는 이름짓기

배열선언
- 같은타입의 데이터의 그룹
-배열표시방법 
char[] s; - 기본형타입
Point[] p; - 참조형타입
배열은 참조형이든 기본형이든 간에 객체로 취급한다
-new 연산자를 통해서 배열을 만들어낸다

public char[] createArray(){
	char[] s;
	s = new char[26]; or char[] s = new char[26];

	for(int i = 0 ; i < 26 ; i++) {
 	s[i] = (char) ('A' + i);
	}
	
	return s;
}
char타입의 s배열
s[i] = (char)('A' + i); : s의 i번째에 A(65) + i의 값을 넣는다
A + i 는 int형 이므로 char타입인 s에 집어넣으려면 (char)('A' +  i) 캐스팅이 필요

---------------------------------------------
참조배열 생성

public Point[] creatArray(){
	Point[] p = new Point[10];

	for(int i = 0 ; i < 10 ; i++){
		p[i] = new Point(i, i+1);
	}

	return p;
}

p배열은 객체의 참조값을 가지고 있다

---------------------------------------------
배열 초기화

String[] names;
names = new String[3];
names[0] = "abc"
names[1] = "efg"
names[2] = "hij"

or

String[] names = {
"abc",
"efg",
"hij"
};

처음 형식이 더 많이 쓰인다
두번째 형식은 정적이다

--------------------------------------------
자바에서 수식메서드를 콜을 한다


--------------------------------------------
다른 클래스의 array를 인자로 불러올때 배열의 크기를 알고 싶다면
length라는 변수를 사용한다
length는 속성같은 거다
속성은 객체만이 갖는다
고로 배열을 객체로 취급한다

--------------------------------------------
double[][] temp = new double[10][365] 
temp.length = 10
부모것만 나옴

for(int i = 0; i < temp.length ; i++)
	for(int j = 0 ; j < temp[i].length ; j++)
	System.out.println(temp[i][j]);

--------------------------------------------
다음 튀어나오고 찍어라
결과만 찍는다
public void printElements(int[] list){
	for(int element ; list){
		System.out.println(element);
	}
}

단점 : 인덱스를 알 수 없다

---------------------------------------------
배열은 크기가 한번 지정되면 resize가 불가능 하다

int[] myArray = new int[6];
myArray = new int[10];
이런식으로 리사이즈 한다
하지만 변화가 아니라 새로운 것을 만들어낸 것이다
new int[6]은 가비지코드의 대상이다

