Exception

checked : 컴파일러가 에외처리 여부 체크

try{int num = Integer.pareseInt("165")
}catch(Exception e){
	throw new NumberFormatException(~~);
}finally{
}

unchecked : runtime

상업적인 개발에서는 예외를 일일이 펼쳐서 처리하지만
먼저 처리 되는 것은 자식, 나중에 처리되는 것은 부모
catch(AException ae) {
}catch(BException be){
}catch(CException ce){
}
프로토타입과 같은 경우에는 일반적으로 예외가 있는지 없는지만 확인하여 처리한다
try{
}catch(Exception e){
}


내가 예외를 하나 만들겠다
상속을 이용하면 그것은 상속받은 것이된다.(버튼을 상속받으면 버튼이되고, 개를 상속받으면 개를 만든것이 된다)
public class MyException extends Exception (checked)
public class MyException extends RuntimeExeption (unchecked)




------------------------------------
컬렉션(collection) - 집합객체

set&list계열의 부모는 컬렉션

set 계열 - 중복허용X, 순서허용X	---> HashSet 	| ex) set s = new HashSet();
list 계열 - 중복허용O, 순서허용O	---> ArrayList 	| ex) list l = new ArrayList();
map 계열 - (key,value) 중복허용X,  ---> HashMap 	| ex) map m = new HashMap();

위의 전부가 인터페이스들이다 -> 추상메서드들이다 -> 객체를 만들지 못한다


https://reakwon.tistory.com/155